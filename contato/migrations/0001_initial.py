# Generated by Django 4.2.24 on 2025-09-29 19:14

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome único da categoria (ex.: Banho, Tosa).', max_length=100, unique=True, verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Mensagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('mensagem', models.TextField(verbose_name='Mensagem')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
            ],
            options={
                'verbose_name': 'Mensagem',
                'verbose_name_plural': 'Mensagens',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='Recurso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do recurso ou perfil da entidade (ex.: Shampoo, Secador).', max_length=50, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Recurso',
                'verbose_name_plural': 'Recursos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('categoria', models.ForeignKey(help_text='Categoria à qual o serviço pertence.', on_delete=django.db.models.deletion.PROTECT, related_name='servicos', to='contato.categoria', verbose_name='Categoria')),
                ('recursos', models.ManyToManyField(blank=True, help_text='Itens associados ao serviço (ex.: Shampoo, Secador).', to='contato.recurso', verbose_name='Recursos')),
            ],
            options={
                'verbose_name': 'Serviço',
                'verbose_name_plural': 'Serviços',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_pet', models.CharField(help_text='Informe o nome do animal de estimação.', max_length=100, verbose_name='Nome do Pet')),
                ('telefone', models.CharField(help_text='Exemplo: +5511999999999', max_length=20, validators=[django.core.validators.RegexValidator('^\\+?\\d{8,15}$', 'Informe um telefone válido.')], verbose_name='Telefone')),
                ('data', models.DateField(help_text='Selecione a data desejada para a reserva.', verbose_name='Data da Reserva')),
                ('observacoes', models.TextField(blank=True, help_text='Informações adicionais sobre a reserva (opcional).', null=True, verbose_name='Observações')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('categoria', models.ForeignKey(blank=True, help_text='Selecione a categoria do serviço.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='contato.categoria', verbose_name='Categoria')),
                ('servico', models.ForeignKey(help_text='Selecione o serviço desejado.', on_delete=django.db.models.deletion.PROTECT, related_name='reservas', to='contato.servico', verbose_name='Serviço')),
            ],
            options={
                'verbose_name': 'Reserva',
                'verbose_name_plural': 'Reservas',
                'ordering': ['-data'],
                'get_latest_by': 'data',
            },
        ),
        migrations.AddIndex(
            model_name='servico',
            index=models.Index(fields=['nome'], name='contato_ser_nome_1ed9cd_idx'),
        ),
        migrations.AddIndex(
            model_name='servico',
            index=models.Index(fields=['-criado_em'], name='contato_ser_criado__ab2716_idx'),
        ),
        migrations.AddIndex(
            model_name='reserva',
            index=models.Index(fields=['data'], name='contato_res_data_7dcae0_idx'),
        ),
        migrations.AddIndex(
            model_name='reserva',
            index=models.Index(fields=['telefone'], name='contato_res_telefon_696b55_idx'),
        ),
    ]
